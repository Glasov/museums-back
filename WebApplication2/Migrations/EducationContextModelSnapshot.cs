// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(EducationContext))]
    partial class EducationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Data.Models.Exhibition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("double precision")
                        .HasColumnName("cost");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long>("EndTimestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("end_timestamp");

                    b.Property<int>("MuseumId")
                        .HasColumnType("integer")
                        .HasColumnName("museum_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long>("StartTimestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("start_timestamp");

                    b.HasKey("Id")
                        .HasName("pk_exhibitions");

                    b.HasIndex("MuseumId")
                        .HasDatabaseName("ix_exhibitions_museum_id");

                    b.ToTable("exhibitions", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Data.Models.ExhibitionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("ExhibitionId")
                        .HasColumnType("integer")
                        .HasColumnName("exhibition_id");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_exhibition_items");

                    b.HasIndex("ExhibitionId")
                        .HasDatabaseName("ix_exhibition_items_exhibition_id");

                    b.ToTable("exhibition_items", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Data.Models.Museum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_museums");

                    b.ToTable("museums", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("bigint")
                        .HasColumnName("cost");

                    b.Property<long>("CreationTimestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("creation_timestamp");

                    b.Property<long>("Discount")
                        .HasColumnType("bigint")
                        .HasColumnName("discount");

                    b.Property<int>("ExhibitionId")
                        .HasColumnType("integer")
                        .HasColumnName("exhibition_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("ExhibitionId")
                        .HasDatabaseName("ix_orders_exhibition_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email")
                        .HasColumnOrder(2);

                    b.Property<long>("LastEditTimestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("last_edit_timestamp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<long>("RegistrationTimestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("registration_timestamp");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Data.Models.Exhibition", b =>
                {
                    b.HasOne("WebApplication2.Data.Models.Museum", "Museum")
                        .WithMany("Exhibitions")
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exhibitions_museums_museum_id");

                    b.Navigation("Museum");
                });

            modelBuilder.Entity("WebApplication2.Data.Models.ExhibitionItem", b =>
                {
                    b.HasOne("WebApplication2.Data.Models.Exhibition", "Exhibition")
                        .WithMany("ExhibitionItems")
                        .HasForeignKey("ExhibitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exhibition_items_exhibitions_exhibition_id");

                    b.Navigation("Exhibition");
                });

            modelBuilder.Entity("WebApplication2.Data.Models.Order", b =>
                {
                    b.HasOne("WebApplication2.Data.Models.Exhibition", "Exhibition")
                        .WithMany("Orders")
                        .HasForeignKey("ExhibitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_exhibitions_exhibition_id");

                    b.HasOne("WebApplication2.Data.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_users_user_id");

                    b.Navigation("Exhibition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication2.Data.Models.Exhibition", b =>
                {
                    b.Navigation("ExhibitionItems");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebApplication2.Data.Models.Museum", b =>
                {
                    b.Navigation("Exhibitions");
                });

            modelBuilder.Entity("WebApplication2.Data.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
